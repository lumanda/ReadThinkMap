// 什么是内存泄漏

// 是指： 一块被分配的内存既不能使用又不能回收， 直到浏览器进程结束

// 常见的内存泄漏

// 1. 意外的全局变量
// js对为声明变量会在全局最高对象上创建它的引用
// 2. console.log
// 因为在代码运行之后需要在开发工具能查看对象信息，所以传递console.log的对象是不能被垃圾回收
// 3. DOM泄漏
// 浏览器中的DOM和JS采用的是不一样的引擎，DOM采用的是渲染引擎，而js采用的是V8引擎，所以在用js操作DOM时会比较消耗性能，
// 因为他们需要桥来链接他们。为了减少DOM的操作，我们一般将常用的DOM采用变量引用的方式会将其缓存在当前环境中。
// 如果在进行一些删除、更新操作之后，可能会忘记释放已经缓存的DOM。
// 4. 闭包
// 5. 被遗忘的计时器
// js中常用的定时器setInterval()、setTimeout() 在使用完之后如果没有手动关闭，会一直存在执行占用内存
// 所以在不用的时候可以通过clearInterval()、clearTimeout() 来关闭其对应的定时器、释放内存。